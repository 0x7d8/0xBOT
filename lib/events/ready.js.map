{
  "version": 3,
  "sources": ["../../src/events/ready.ts"],
  "sourcesContent": ["import { Events, ActivityType } from \"discord.js\"\nimport { setTimeout as wait } from \"timers/promises\"\nimport axios from \"axios\"\nimport simpleGit from \"simple-git\"\n\nconst git = simpleGit()\n\n// Connect to Database\nimport config from \"@config\"\nimport { default as pg } from \"pg\"\nconst db = new pg.Pool({\n\thost: config.database.oxbot.host,\n\tdatabase: config.database.oxbot.database,\n\tuser: config.database.oxbot.username,\n\tpassword: config.database.oxbot.password,\n\tport: 5432,\n\tssl: true\n})\n\nimport * as bot from \"@/functions/bot\"\nimport Client from \"@/interfaces/Client\"\nexport default {\n\tname: 'START BOT',\n\tevent: Events.ClientReady,\n\tonce: true,\n\n\tasync execute(client: Client, timed: number) {\n\t\t// Log\n\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] STARTED AND LOGGED IN AS ${client.user?.tag} (${timed}ms)`)\n\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [END] $$$$$ LOADED 0xBOT ${config.version}`)\n\t\tconsole.log(' ')\n\t\tconst dblReq = await axios({\n\t\t\tmethod: 'POST',\n\t\t\turl: `https://discordbotlist.com/api/v1/bots/${config.client.id}/commands`,\n\t\t\tvalidateStatus: () => true,\n\t\t\theaders: {\n\t\t\t\tAuthorization: config.web.keys.dbl.apikey\n\t\t\t}, data: client.commands.map((command) => ({ ...command.data, type: 1 }))\n\t\t}); console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] [${dblReq.status}] POSTED COMMANDS TO DBL`)\n\t\tconsole.log(' ')\n\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [STA] $$$$$ STARTED LOGGING OF COMMANDS AND ERRORS`)\n\t\tconsole.log(' ')\n\n\t\t// Set Status\n\t\twhile (!+[]) {\n\t\t\tclient.user?.setActivity(`${client.guilds.cache.size} Servers`, { type: ActivityType.Watching })\n\t\t\tawait wait(20000)\n\n\t\t\tclient.user?.setActivity(`${(await git.log()).total} Commits`, { type: ActivityType.Watching })\n\t\t\tawait wait(20000)\n\n\t\t\tclient.user?.setActivity(`${await bot.stat.get('t-all', 'cmd')} Commands Used`, { type: ActivityType.Watching })\n\t\t\tawait wait(10000)\n\n\t\t\tclient.user?.setActivity(`${await bot.stat.get('t-all', 'btn')} Buttons Clicked`, { type: ActivityType.Watching })\n\t\t\tawait wait(20000)\n\n\t\t\tconst rawvalues = await db.query(`select * from usermoney;`); let total = 0\n\t\t\trawvalues.rows.forEach((user: { money: string }) => total += Number(user.money) )\n\t\t\tclient.user?.setActivity(`\\$${total} in Circulation`, { type: ActivityType.Watching })\n\t\t\tawait wait(20000)\n\n\t\t\ttry {\n\t\t\t\tconst req = await axios({\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\turl: 'https://status.0xbot.de/api/status-page/heartbeat/all',\n\t\t\t\t\tvalidateStatus: false,\n\t\t\t\t\theaders: {}\n\t\t\t\t} as any); const res = req.data\n\n\t\t\t\tclient.user.setActivity(`${Math.round((res.uptimeList['1_24'] * 100) * 100) / 100}% Bot Uptime`, { type: ActivityType.Watching })\n\t\t\t\tawait wait(20000)\n\t\t\t} catch (err) { }\n\t\t}\n\t}\n}"],
  "mappings": "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",
  "names": ["simpleGit", "pg", "config", "axios", "wait"]
}
