{
  "version": 3,
  "sources": ["../../src/functions/bot.ts"],
  "sourcesContent": ["import { CommandInteraction, EmbedBuilder } from \"discord.js\"\nimport Client from \"@/interfaces/Client\"\n\nimport * as stat from \"./stats\"\nimport * as utils from \"rjutils-collection\"\nimport * as fs from \"fs\"\n\n/// Functions\n// Noname\nexport * as stat from \"./stats\"\n\n// Misc\nexport * as apis from \"./misc/apis\"\nexport * as votes from \"./misc/votes\"\nexport * as quotes from \"./misc/quotes\"\nexport * as polls from \"./misc/polls\"\nexport * as userdb from \"./misc/userdb\"\nexport * as settings from \"./misc/settings\"\nexport * as language from \"./misc/language\"\nexport * as cooldown from \"./misc/cooldown\"\n\n// Economy\nexport * as items from \"./economy/items\"\nexport * as money from \"./economy/money\"\nexport * as stocks from \"./economy/stocks\"\nexport * as businesses from \"./economy/businesses\"\nexport * as transactions from \"./economy/transactions\"\n\n// Math\nexport const inRange = (x: number, min: number, max: number) => {\n\treturn ((x-min)*(x-max) <= 0)\n}\n\nexport const perAdd = (value: number, percent: number) => {\n\tconst percentage = ((percent/100) * value)\n\treturn (value + percentage)\n}\n\nexport const perCalc = (newVal: number, oldVal: number) => {\n\tlet res = ((newVal - oldVal)/oldVal) * 100\n\tres = Math.round(res * 10) / 10\n\treturn (res<0?\"\":\"+\") + res\n}\n\n// Other\nexport const random = utils.randomNum\n\nexport const log = (type: boolean, uid: string, gid: string, msg: string) => {\n\tif (!type) console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [${uid} @ ${gid}] ${msg}`)\n\telse console.log(`[0xBOT] [!] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [${uid} @ ${gid}] ${msg}`)\n}\n\nexport const getOption = (interaction: CommandInteraction, option: string) => {\n\tif (!interaction.options.get(option)) return null\n\telse return interaction.options.get(option).value\n}\n\nexport const isNumber = (string: string) => {\n\treturn [...string].every((c) => '0123456789'.includes(c))\n}\n\nexport const stats = (type: string, uid: string, gid: string) => {\n\t// Count to Global Commands\n\tstat.add('t-all', type, 1)\n\t\t\n\t// Count Guild Commands and User\n\tstat.add('g-' + gid, type, 1)\n\tstat.add('u-' + uid, type, 1)\n}\n\nexport const error = async(interaction: CommandInteraction, client: Client, error: Error, type: string, language: string, vote: string) => {\n\tif (!interaction.guild) return\n\n\t// Generate Error Code\n\tconst errorid = utils.randomStr({\n\t\tlength: 8,\n\t\tnumbers: true,\n\t\tuppercase: true,\n\t\tlowercase: true,\n\t\tsymbols: false,\n\t\texclude: ''\n\t})\n\n\t// Check if Log Folder exists\n\tif (!fs.existsSync('logs')) fs.mkdirSync('logs')\n\n\t// Log Error\n\tconsole.log('[0xBOT] [!] [' + new Date().toLocaleTimeString('en-US', { hour12: false }) + '] [' + interaction.user.id + ' @ ' + interaction.guild.id + '] [' + type.toUpperCase() + '] ERROR : ' + errorid + ' :')\n\tconsole.error(error)\n\tconst day = ('0' + new Date().getDate()).slice(-2)\n\tconst month = ('0' + (new Date().getMonth() + 1)).slice(-2)\n\tconst year = new Date().getFullYear()\n\tfs.appendFileSync(`logs/error${day}-${month}-${year}.log`, '[0xBOT] [!] [' + new Date().toLocaleTimeString('en-US', { hour12: false }) + '] [' + interaction.user.id + ' @ ' + interaction.guild.id + '] [' + type.toUpperCase() + '] ERROR : ' + errorid + ' :\\n')\n\tfs.appendFileSync(`logs/error${day}-${month}-${year}.log`, error.stack + '\\n\\n')\n\n\t// Generate Correct Word\n\tlet word = ''\n\tswitch (type) {\n\t\tcase 'cmd':\n\t\t\tword = 'this Command'\n\t\t\tif (language === 'de') word = 'dieses Befehls'\n\t\t\tbreak\n\n\t\tcase 'btn':\n\t\t\tword = 'this Button'\n\t\t\tif (language === 'de') word = 'dieses Buttons'\n\t\t\tbreak\n\n\t\tcase 'mod':\n\t\t\tword = 'this Modal'\n\t\t\tif (language === 'de') word = 'dieser Modal'\n\t\t\tbreak\n\n\t\tdefault:\n\t\t\tword = 'this Event'\n\t\t\tif (language === 'de') word = 'dieses Events'\n\t\t\tbreak\n\t}\n\n\t// Create Error Embed\n\tlet message = new EmbedBuilder().setColor(0x37009B)\n\t\t.setTitle('<:EXCLAMATION:1024407166460891166> \u00BB ERROR')\n\t\t.setDescription(`\n\t\t\t\u00BB <:ERROR:1020414987291861022> An Error has occured while executing ${word}.\n\t\t\tThe Error has been logged and will be fixed soon!\n\t\t`).setFooter({ text: '\u00BB ' + vote + ' \u00BB ' + client.config.version + ' \u00BB ERROR: ' + errorid })\n\tif (language === 'de') {\n\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t.setTitle('<:EXCLAMATION:1024407166460891166> \u00BB FEHLER')\n\t\t\t.setDescription(`\n\t\t\t\t\u00BB <:ERROR:1020414987291861022> Ein Fehler ist beim ausf\u00FChren ${word} aufgetreten.\n\t\t\t\tDer Fehler wurde geloggt und wird bald behoben!\n\t\t\t`).setFooter({ text: '\u00BB ' + vote + ' \u00BB ' + client.config.version + ' \u00BB FEHLER: ' + errorid })\n\t}\n\n\t// Send Message\n\tawait interaction.reply({ embeds: [message], ephemeral: true })\n}\n\n// Game Caches\nexport const bomb = new Map()\nexport const game = new Map()\nexport const memory = new Map()\nexport const rps = new Map()\nexport const ttt = new Map()"],
  "mappings": "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",
  "names": ["stat", "error", "language"]
}
