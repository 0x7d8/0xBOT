{
  "version": 3,
  "sources": ["../../../src/functions/misc/userdb.ts"],
  "sourcesContent": ["// Connect to Database\nimport config from \"@config\"\nimport { default as pg } from \"pg\"\nconst db = new pg.Pool({\n\thost: config.database.oxbot.host,\n\tdatabase: config.database.oxbot.database,\n\tuser: config.database.oxbot.username,\n\tpassword: config.database.oxbot.password,\n\tport: 5432,\n\tssl: true\n})\n\n// Login\nimport * as bot from \"@/functions/bot\"\nimport { Client, GatewayIntentBits } from \"discord.js\"\nconst client = new Client({\n\tintents: [\n\t\tGatewayIntentBits.Guilds,\n\t\tGatewayIntentBits.GuildMembers,\n\t\tGatewayIntentBits.GuildMessages,\n\t\tGatewayIntentBits.MessageContent\n\t]\n}); client.login(config.client.token)\n\n// Get Function\nexport const get = async(userId: string) => {\n\tconst data = await db.query(`select * from userinfos where userid = $1;`, [userId])\n\n\tif (!bot.isNumber(userId)) return {\n\t\tuserid: userId,\n\t\tusername: \"unknown\",\n\t\tusertag: \"unknown\",\n\t\tavatar: \"unknown\"\n\t}\n\n\tif (data.rowCount !== 1) {\n\t\tlet cont = true\n\t\tconst user: any = await client.users.fetch(userId).catch(() => { cont = false })\n\n\t\tif (cont) {\n\t\t\tbot.userdb.add(user)\n\n\t\t\treturn {\n\t\t\t\tuserid: user.id,\n\t\t\t\tusername: user.username,\n\t\t\t\tusertag: user.discriminator,\n\t\t\t\tavatar: user.avatar\n\t\t\t}\n\t\t} else return\n\t}\n\n\treturn {\n\t\tuserid: data.rows[0].userid,\n\t\tusername: data.rows[0].username,\n\t\tusertag: data.rows[0].discriminator,\n\t\tavatar: data.rows[0].avatar\n\t}\n}\n\ninterface add {\n\tid: string\n\tusername: string\n\tdiscriminator: string\n\tavatar: string\n}\n\n// Add Function\nexport const add = async(json: add) => {\n\tconst data = await db.query(`select null from userinfos where userid = $1;`, [json.id])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userinfos values ($1, $2, $3, $4)`, [\n\t\t\tjson.id,\n\t\t\tjson.username,\n\t\t\tjson.discriminator,\n\t\t\tjson.avatar\n\t\t])\n\t} else {\n\t\tawait db.query(`update userinfos set username = $1, discriminator = $2, avatar = $3 where userid = $4;`, [\n\t\t\tjson.username,\n\t\t\tjson.discriminator,\n\t\t\tjson.avatar,\n\t\t\tjson.id\n\t\t])\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAmB;AACnB,gBAA8B;AAW9B,UAAqB;AACrB,qBAA0C;AAX1C,MAAM,KAAK,IAAI,UAAAA,QAAG,KAAK;AAAA,EACtB,MAAM,cAAAC,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM,cAAAA,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,KAAK;AACN,CAAC;AAKD,MAAM,SAAS,IAAI,sBAAO;AAAA,EACzB,SAAS;AAAA,IACR,iCAAkB;AAAA,IAClB,iCAAkB;AAAA,IAClB,iCAAkB;AAAA,IAClB,iCAAkB;AAAA,EACnB;AACD,CAAC;AAAG,OAAO,MAAM,cAAAA,QAAO,OAAO,KAAK;AAG7B,MAAM,MAAM,OAAM,WAAmB;AAC3C,QAAM,OAAO,MAAM,GAAG,MAAM,8CAA8C,CAAC,MAAM,CAAC;AAElF,MAAI,CAAC,IAAI,SAAS,MAAM;AAAG,WAAO;AAAA,MACjC,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,IACT;AAEA,MAAI,KAAK,aAAa,GAAG;AACxB,QAAI,OAAO;AACX,UAAM,OAAY,MAAM,OAAO,MAAM,MAAM,MAAM,EAAE,MAAM,MAAM;AAAE,aAAO;AAAA,IAAM,CAAC;AAE/E,QAAI,MAAM;AACT,UAAI,OAAO,IAAI,IAAI;AAEnB,aAAO;AAAA,QACN,QAAQ,KAAK;AAAA,QACb,UAAU,KAAK;AAAA,QACf,SAAS,KAAK;AAAA,QACd,QAAQ,KAAK;AAAA,MACd;AAAA,IACD;AAAO;AAAA,EACR;AAEA,SAAO;AAAA,IACN,QAAQ,KAAK,KAAK,CAAC,EAAE;AAAA,IACrB,UAAU,KAAK,KAAK,CAAC,EAAE;AAAA,IACvB,SAAS,KAAK,KAAK,CAAC,EAAE;AAAA,IACtB,QAAQ,KAAK,KAAK,CAAC,EAAE;AAAA,EACtB;AACD;AAUO,MAAM,MAAM,OAAM,SAAc;AACtC,QAAM,OAAO,MAAM,GAAG,MAAM,iDAAiD,CAAC,KAAK,EAAE,CAAC;AACtF,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,iDAAiD;AAAA,MAC/D,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,0FAA0F;AAAA,MACxG,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACN,CAAC;AAAA,EACF;AACD;",
  "names": ["pg", "config"]
}
