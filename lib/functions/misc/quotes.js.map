{
  "version": 3,
  "sources": ["../../../src/functions/misc/quotes.ts"],
  "sourcesContent": ["// Connect to Database\nimport config from \"@config\"\nimport { default as pg } from \"pg\"\nconst db = new pg.Pool({\n\thost: config.database.oxbot.host,\n\tdatabase: config.database.oxbot.database,\n\tuser: config.database.oxbot.username,\n\tpassword: config.database.oxbot.password,\n\tport: 5432,\n\tssl: true\n})\n\n// Get Function\nexport const get = async(userId: string) => {\n\tconst data = await db.query(`select quotes from userquotes where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) return 0\n\n\treturn Number(data.rows[0].quotes)\n}\n\n// Set Function\nexport const set = async(userId: string, value: number) => {\n\tconst data = await db.query(`select null from userquotes where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userquotes values ($1, $2)`, [\n\t\t\tuserId,\n\t\t\tvalue\n\t\t])\n\t} else {\n\t\tawait db.query(`update userquotes set votes = $1 where userid = $2;`, [\n\t\t\tvalue,\n\t\t\tuserId\n\t\t])\n\t}\n}\n\n// Add Function\nexport const add = async(userId: string, value: number) => {\n\tconst data = await db.query(`select null from userquotes where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userquotes values ($1, $2)`, [\n\t\t\tuserId,\n\t\t\tvalue\n\t\t])\n\t} else {\n\t\tawait db.query(`update userquotes set quotes = quotes + $1 where userid = $2;`, [\n\t\t\tvalue,\n\t\t\tuserId\n\t\t])\n\t}\n}\n\n// Rem Function\nexport const rem = async(userId: string, value: number) => {\n\tconst data = await db.query(`select null from userquotes where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userquotes values ($1, 0)`, [\n\t\t\tuserId\n\t\t])\n\t} else {\n\t\tawait db.query(`update userquotes set quotes = quotes - $1 where userid = $2;`, [\n\t\t\tvalue,\n\t\t\tuserId\n\t\t])\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAmB;AACnB,gBAA8B;AAC9B,MAAM,KAAK,IAAI,UAAAA,QAAG,KAAK;AAAA,EACtB,MAAM,cAAAC,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM,cAAAA,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,KAAK;AACN,CAAC;AAGM,MAAM,MAAM,OAAM,WAAmB;AAC3C,QAAM,OAAO,MAAM,GAAG,MAAM,oDAAoD,CAAC,MAAM,CAAC;AACxF,MAAI,KAAK,aAAa;AAAG,WAAO;AAEhC,SAAO,OAAO,KAAK,KAAK,CAAC,EAAE,MAAM;AAClC;AAGO,MAAM,MAAM,OAAM,QAAgB,UAAkB;AAC1D,QAAM,OAAO,MAAM,GAAG,MAAM,kDAAkD,CAAC,MAAM,CAAC;AACtF,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,0CAA0C;AAAA,MACxD;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,uDAAuD;AAAA,MACrE;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,QAAgB,UAAkB;AAC1D,QAAM,OAAO,MAAM,GAAG,MAAM,kDAAkD,CAAC,MAAM,CAAC;AACtF,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,0CAA0C;AAAA,MACxD;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,iEAAiE;AAAA,MAC/E;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,QAAgB,UAAkB;AAC1D,QAAM,OAAO,MAAM,GAAG,MAAM,kDAAkD,CAAC,MAAM,CAAC;AACtF,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,yCAAyC;AAAA,MACvD;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,iEAAiE;AAAA,MAC/E;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;",
  "names": ["pg", "config"]
}
