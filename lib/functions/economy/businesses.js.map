{
  "version": 3,
  "sources": ["../../../src/functions/economy/businesses.ts"],
  "sourcesContent": ["// Connect to Database\nimport config from \"@config\"\nimport { default as pg } from \"pg\"\nconst db = new pg.Pool({\n\thost: config.database.oxbot.host,\n\tdatabase: config.database.oxbot.database,\n\tuser: config.database.oxbot.username,\n\tpassword: config.database.oxbot.password,\n\tport: 5432,\n\tssl: true\n})\n\n// Get Function\nexport const get = async(userId: string, type?: boolean) => {\n\tconst data = await db.query(`select txtvalue, intvalue from userbusinesses where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) return 0\n\n\tif (!type) return data.rows[0].txtvalue\n\telse return Number(data.rows[0].intvalue)\n}\n\n// Set Function\nexport const set = async(userId: string, value: string) => {\n\tconst data = await db.query(`select null from userbusinesses where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userbusinesses values ($1, $2, 0)`, [\n\t\t\tuserId,\n\t\t\tvalue\n\t\t])\n\t} else {\n\t\tawait db.query(`update userbusinesses set txtvalue = $1 where userid = $2;`, [\n\t\t\tvalue,\n\t\t\tuserId\n\t\t])\n\t}\n}\n\n// Add Function\nexport const add = async(userId: string, value: number) => {\n\tconst data = await db.query(`select null from userbusinesses where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userbusinesses values ($1, 0, $2)`, [\n\t\t\tuserId,\n\t\t\tvalue\n\t\t])\n\t} else {\n\t\tawait db.query(`update userbusinesses set intvalue = intvalue + $1 where userid = $2;`, [\n\t\t\tvalue,\n\t\t\tuserId\n\t\t])\n\t}\n}\n\n// Rem Function\nexport const rem = async(userId: string, value: number) => {\n\tconst data = await db.query(`select null from userbusinesses where userid = $1;`, [userId])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userbusinesses values ($1, 0, 0)`, [\n\t\t\tuserId\n\t\t])\n\t} else {\n\t\tawait db.query(`update userbusinesses set intvalue = intvalue - $1 where userid = $2;`, [\n\t\t\tvalue,\n\t\t\tuserId\n\t\t])\n\t}\n}\n\n// Del Function\nexport const del = async(userId: string) => {\n\tawait db.query(`delete from userbusinesses where userid = $1;`, [userId])\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAmB;AACnB,gBAA8B;AAC9B,MAAM,KAAK,IAAI,UAAAA,QAAG,KAAK;AAAA,EACtB,MAAM,cAAAC,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM,cAAAA,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,KAAK;AACN,CAAC;AAGM,MAAM,MAAM,OAAM,QAAgB,SAAmB;AAC3D,QAAM,OAAO,MAAM,GAAG,MAAM,oEAAoE,CAAC,MAAM,CAAC;AACxG,MAAI,KAAK,aAAa;AAAG,WAAO;AAEhC,MAAI,CAAC;AAAM,WAAO,KAAK,KAAK,CAAC,EAAE;AAAA;AAC1B,WAAO,OAAO,KAAK,KAAK,CAAC,EAAE,QAAQ;AACzC;AAGO,MAAM,MAAM,OAAM,QAAgB,UAAkB;AAC1D,QAAM,OAAO,MAAM,GAAG,MAAM,sDAAsD,CAAC,MAAM,CAAC;AAC1F,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,iDAAiD;AAAA,MAC/D;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,8DAA8D;AAAA,MAC5E;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,QAAgB,UAAkB;AAC1D,QAAM,OAAO,MAAM,GAAG,MAAM,sDAAsD,CAAC,MAAM,CAAC;AAC1F,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,iDAAiD;AAAA,MAC/D;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,yEAAyE;AAAA,MACvF;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,QAAgB,UAAkB;AAC1D,QAAM,OAAO,MAAM,GAAG,MAAM,sDAAsD,CAAC,MAAM,CAAC;AAC1F,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,gDAAgD;AAAA,MAC9D;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,yEAAyE;AAAA,MACvF;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,WAAmB;AAC3C,QAAM,GAAG,MAAM,iDAAiD,CAAC,MAAM,CAAC;AACzE;",
  "names": ["pg", "config"]
}
