{
  "version": 3,
  "sources": ["../../../src/functions/economy/stocks.ts"],
  "sourcesContent": ["// Connect to Database\nimport config from \"@config\"\nimport { default as pg } from \"pg\"\nconst db = new pg.Pool({\n\thost: config.database.oxbot.host,\n\tdatabase: config.database.oxbot.database,\n\tuser: config.database.oxbot.username,\n\tpassword: config.database.oxbot.password,\n\tport: 5432,\n\tssl: true\n})\n\n// Get Function\nexport const get = async(userId: string, stock: string, type: string) => {\n\tconst data = await db.query(`select value from userstocks where userid = $1 and stock = $2 and type = $3;`, [\n\t\tuserId,\n\t\tstock,\n\t\ttype\n\t])\n\n\tif (data.rowCount !== 1 && type === 'used') return 0\n\tif (data.rowCount !== 1 && type === 'max') return 10\n\treturn Number(data.rows[0].value)\n}\n\n// Set Function\nexport const set = async(userId: string, stock: string, type: string, value: number) => {\n\tconst data = await db.query(`select null from userstocks where userid = $1 and stock = $2 and type = $3;`, [\n\t\tuserId,\n\t\tstock,\n\t\ttype\n\t])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userstocks values ($1, $2, $3, $4)`, [\n\t\t\tuserId,\n\t\t\tstock,\n\t\t\ttype,\n\t\t\tvalue\n\t\t])\n\t} else {\n\t\tawait db.query(`update userstocks set value = $1 where userid = $2 and stock = $3 and type = $4;`, [\n\t\t\tvalue,\n\t\t\tuserId,\n\t\t\tstock,\n\t\t\ttype\n\t\t])\n\t}\n}\n\n// Add Function\nexport const add = async(userId: string, stock: string, type: string, value: number) => {\n\tconst data = await db.query(`select null from userstocks where userid = $1 and stock = $2 and type = $3;`, [\n\t\tuserId,\n\t\tstock,\n\t\ttype\n\t])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userstocks values ($1, $2, $3, $4)`, [\n\t\t\tuserId,\n\t\t\tstock,\n\t\t\ttype,\n\t\t\tvalue\n\t\t])\n\t\tif (type === 'max') {\n\t\t\tawait db.query(`update userstocks set value = value + 10 where userid = $1 and stock = $2 and type = $3`, [\n\t\t\t\tuserId,\n\t\t\t\tstock,\n\t\t\t\ttype\n\t\t\t])\n\t\t}\n\t} else {\n\t\tawait db.query(`update userstocks set value = value + $1 where userid = $2 and stock = $3 and type = $4;`, [\n\t\t\tvalue,\n\t\t\tuserId,\n\t\t\tstock,\n\t\t\ttype\n\t\t])\n\t}\n}\n\n// Rem Function\nexport const rem = async(userId: string, stock: string, type: string, value: number) => {\n\tconst data = await db.query(`select null from userstocks where userid = $1 and stock = $2 and type = $3;`, [\n\t\tuserId,\n\t\tstock,\n\t\ttype\n\t])\n\tif (data.rowCount !== 1) {\n\t\tawait db.query(`insert into userstocks values ($1, $2, $3, $4)`, [\n\t\t\tuserId,\n\t\t\tstock,\n\t\t\ttype,\n\t\t\tvalue\n\t\t])\n\t} else {\n\t\tawait db.query(`update userstocks set value = value - $1 where userid = $2 and stock = $3 and type = $4;`, [\n\t\t\tvalue,\n\t\t\tuserId,\n\t\t\tstock,\n\t\t\ttype\n\t\t])\n\t\tif (type === 'max') {\n\t\t\tawait db.query(`update userstocks set value = value + 10 where userid = $1 and stock = $2 and type = $3`, [\n\t\t\t\tuserId,\n\t\t\t\tstock,\n\t\t\t\ttype\n\t\t\t])\n\t\t}\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAmB;AACnB,gBAA8B;AAC9B,MAAM,KAAK,IAAI,UAAAA,QAAG,KAAK;AAAA,EACtB,MAAM,cAAAC,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM,cAAAA,QAAO,SAAS,MAAM;AAAA,EAC5B,UAAU,cAAAA,QAAO,SAAS,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,KAAK;AACN,CAAC;AAGM,MAAM,MAAM,OAAM,QAAgB,OAAe,SAAiB;AACxE,QAAM,OAAO,MAAM,GAAG,MAAM,gFAAgF;AAAA,IAC3G;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AAED,MAAI,KAAK,aAAa,KAAK,SAAS;AAAQ,WAAO;AACnD,MAAI,KAAK,aAAa,KAAK,SAAS;AAAO,WAAO;AAClD,SAAO,OAAO,KAAK,KAAK,CAAC,EAAE,KAAK;AACjC;AAGO,MAAM,MAAM,OAAM,QAAgB,OAAe,MAAc,UAAkB;AACvF,QAAM,OAAO,MAAM,GAAG,MAAM,+EAA+E;AAAA,IAC1G;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AACD,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,kDAAkD;AAAA,MAChE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,oFAAoF;AAAA,MAClG;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,QAAgB,OAAe,MAAc,UAAkB;AACvF,QAAM,OAAO,MAAM,GAAG,MAAM,+EAA+E;AAAA,IAC1G;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AACD,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,kDAAkD;AAAA,MAChE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AACD,QAAI,SAAS,OAAO;AACnB,YAAM,GAAG,MAAM,2FAA2F;AAAA,QACzG;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD,OAAO;AACN,UAAM,GAAG,MAAM,4FAA4F;AAAA,MAC1G;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAGO,MAAM,MAAM,OAAM,QAAgB,OAAe,MAAc,UAAkB;AACvF,QAAM,OAAO,MAAM,GAAG,MAAM,+EAA+E;AAAA,IAC1G;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AACD,MAAI,KAAK,aAAa,GAAG;AACxB,UAAM,GAAG,MAAM,kDAAkD;AAAA,MAChE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF,OAAO;AACN,UAAM,GAAG,MAAM,4FAA4F;AAAA,MAC1G;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AACD,QAAI,SAAS,OAAO;AACnB,YAAM,GAAG,MAAM,2FAA2F;AAAA,QACzG;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AACD;",
  "names": ["pg", "config"]
}
