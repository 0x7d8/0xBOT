{
  "version": 3,
  "sources": ["../../../../src/routes/normal/auth/login.ts"],
  "sourcesContent": ["import { HTTPRouteFile } from \"@/interfaces/Webserver\"\n\ninterface Body {}\n\nimport * as utils from \"rjutils-collection\"\nimport { default as DiscordOauth2 } from \"discord-oauth2\"\nconst oAuth = new DiscordOauth2()\n\nexport = {\n\tmethod: 'POST',\n\tpath: '/auth/login',\n\n\tasync code(ctr) {\n\t\t// Check for Headers\n\t\tif (!ctr.headers.has('code')) return ctr.status(422).print({ success: false, message: 'NO CODE' })\n\n\t\t// Get Token\n\t\tconst token = await oAuth.tokenRequest({\n\t\t\tclientId: ctr['@'].config.client.id,\n\t\t\tclientSecret: ctr['@'].config.client.secret,\n\t\t\tgrantType: 'authorization_code',\n\t\t\tscope: ['identify', 'guilds', 'email'],\n\t\t\tredirectUri: 'https://0xbot.de/auth/discord',\n\t\t\tcode: ctr.headers.get('code')\n\t\t}).catch((e) => { })\n\t\tif (!token) return ctr.print({ success: false, message: 'INVALID TOKEN' })\n\n\t\t// Get Infos\n\t\tconst userInfos = await oAuth.getUser(token.access_token)\n\n\t\t// Generate Auth Token\n\t\tconst base = `${userInfos.id} ${token.access_token}`\n\t\tconst authToken = utils.hashStr({ text: base, algorithm: 'sha256', output: 'hex' }) as string\n\n\t\t// Add To Database\n\t\tctr['@'].api.users.set({\n\t\t\tauth: authToken,\n\t\t\tuser: {\n\t\t\t\tid: userInfos.id,\n\t\t\t\tname: userInfos.username,\n\t\t\t\ttag: userInfos.discriminator,\n\t\t\t\temail: userInfos.email,\n\t\t\t\tavatar: userInfos.avatar\n\t\t\t}, tokens: {\n\t\t\t\taccess: token.access_token,\n\t\t\t\trefresh: token.refresh_token\n\t\t\t}\n\t\t})\n\n\t\t// Return Result\n\t\treturn ctr.print({\n\t\t\tsuccess: true,\n\t\t\tauthToken: authToken,\n\t\t\tinfos: userInfos\n\t\t})\n\t}\n} as HTTPRouteFile<Body>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAIA,YAAuB;AACvB,4BAAyC;AACzC,MAAM,QAAQ,IAAI,sBAAAA,QAAc;AAEhC,iBAAS;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EAEN,MAAM,KAAK,KAAK;AAEf,QAAI,CAAC,IAAI,QAAQ,IAAI,MAAM;AAAG,aAAO,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,SAAS,OAAO,SAAS,UAAU,CAAC;AAGjG,UAAM,QAAQ,MAAM,MAAM,aAAa;AAAA,MACtC,UAAU,IAAI,GAAG,EAAE,OAAO,OAAO;AAAA,MACjC,cAAc,IAAI,GAAG,EAAE,OAAO,OAAO;AAAA,MACrC,WAAW;AAAA,MACX,OAAO,CAAC,YAAY,UAAU,OAAO;AAAA,MACrC,aAAa;AAAA,MACb,MAAM,IAAI,QAAQ,IAAI,MAAM;AAAA,IAC7B,CAAC,EAAE,MAAM,CAAC,MAAM;AAAA,IAAE,CAAC;AACnB,QAAI,CAAC;AAAO,aAAO,IAAI,MAAM,EAAE,SAAS,OAAO,SAAS,gBAAgB,CAAC;AAGzE,UAAM,YAAY,MAAM,MAAM,QAAQ,MAAM,YAAY;AAGxD,UAAM,OAAO,GAAG,UAAU,MAAM,MAAM;AACtC,UAAM,YAAY,MAAM,QAAQ,EAAE,MAAM,MAAM,WAAW,UAAU,QAAQ,MAAM,CAAC;AAGlF,QAAI,GAAG,EAAE,IAAI,MAAM,IAAI;AAAA,MACtB,MAAM;AAAA,MACN,MAAM;AAAA,QACL,IAAI,UAAU;AAAA,QACd,MAAM,UAAU;AAAA,QAChB,KAAK,UAAU;AAAA,QACf,OAAO,UAAU;AAAA,QACjB,QAAQ,UAAU;AAAA,MACnB;AAAA,MAAG,QAAQ;AAAA,QACV,QAAQ,MAAM;AAAA,QACd,SAAS,MAAM;AAAA,MAChB;AAAA,IACD,CAAC;AAGD,WAAO,IAAI,MAAM;AAAA,MAChB,SAAS;AAAA,MACT;AAAA,MACA,OAAO;AAAA,IACR,CAAC;AAAA,EACF;AACD;",
  "names": ["DiscordOauth2"]
}
