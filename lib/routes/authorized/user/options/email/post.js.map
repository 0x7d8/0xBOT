{
  "version": 3,
  "sources": ["../../../../../../src/routes/authorized/user/options/email/post.ts"],
  "sourcesContent": ["import { HTTPRouteFile } from \"@/interfaces/Webserver\"\n\ninterface Body {\n\toption?: boolean\n}\n\nexport = {\n\tmethod: 'POST',\n\tpath: '/options/email',\n\n\tasync code(ctr) {\n\t\t// Check for Queries\n\t\tif (!('option' in ctr.body)) return ctr.status(422).print({ success: false, message: 'INVALID BODY' })\n\n\t\t// Set Email\n\t\tconst dbemail = await ctr['@'].db.query(`select * from useremails where userid = $1 and email = $2;`, [\n\t\t\tctr[\"@\"].user.id,\n\t\t\tctr[\"@\"].user.email\n\t\t])\n\n\t\tif (ctr.body.option) {\n\t\t\tif (dbemail.rowCount === 0) {\n\t\t\t\tawait ctr['@'].db.query(`insert into useremails values ($1, $2)`, [\n\t\t\t\t\tctr[\"@\"].user.id,\n\t\t\t\t\tctr[\"@\"].user.email\n\t\t\t\t])\n\t\t\t}\n\t\t} else {\n\t\t\tawait ctr['@'].db.query(`delete from useremails where userid = $1 and email = $2;`, [\n\t\t\t\tctr[\"@\"].user.id,\n\t\t\t\tctr[\"@\"].user.email\n\t\t\t])\n\t\t}\n\n\t\t// Return Result\n\t\treturn ctr.print({ success: true, message: 'OPTION UPDATED' })\n\t}\n} as HTTPRouteFile<Body>"],
  "mappings": "AAMA,iBAAS;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EAEN,MAAM,KAAK,KAAK;AAEf,QAAI,EAAE,YAAY,IAAI;AAAO,aAAO,IAAI,OAAO,GAAG,EAAE,MAAM,EAAE,SAAS,OAAO,SAAS,eAAe,CAAC;AAGrG,UAAM,UAAU,MAAM,IAAI,GAAG,EAAE,GAAG,MAAM,8DAA8D;AAAA,MACrG,IAAI,GAAG,EAAE,KAAK;AAAA,MACd,IAAI,GAAG,EAAE,KAAK;AAAA,IACf,CAAC;AAED,QAAI,IAAI,KAAK,QAAQ;AACpB,UAAI,QAAQ,aAAa,GAAG;AAC3B,cAAM,IAAI,GAAG,EAAE,GAAG,MAAM,0CAA0C;AAAA,UACjE,IAAI,GAAG,EAAE,KAAK;AAAA,UACd,IAAI,GAAG,EAAE,KAAK;AAAA,QACf,CAAC;AAAA,MACF;AAAA,IACD,OAAO;AACN,YAAM,IAAI,GAAG,EAAE,GAAG,MAAM,4DAA4D;AAAA,QACnF,IAAI,GAAG,EAAE,KAAK;AAAA,QACd,IAAI,GAAG,EAAE,KAAK;AAAA,MACf,CAAC;AAAA,IACF;AAGA,WAAO,IAAI,MAAM,EAAE,SAAS,MAAM,SAAS,iBAAiB,CAAC;AAAA,EAC9D;AACD;",
  "names": []
}
