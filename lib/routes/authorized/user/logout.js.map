{
  "version": 3,
  "sources": ["../../../../src/routes/authorized/user/logout.ts"],
  "sourcesContent": ["import { HTTPRouteFile } from \"@/interfaces/Webserver\"\n\ninterface Body {}\n\nimport { default as DiscordOauth2 } from \"discord-oauth2\"\nconst oAuth = new DiscordOauth2()\n\nexport = {\n\tmethod: 'POST',\n\tpath: '/auth/logout',\n\n\tasync code(ctr) {\n\t\t// Remove From Database\n\t\tctr['@'].api.users.rem(ctr[\"@\"].user.id)\n\n\t\t// Remove from Discord\n\t\tawait oAuth.revokeToken(\n\t\t\tctr[\"@\"].user.tokens.access,\n\t\t\tBuffer.from(`${ctr['@'].config.client.id}:${ctr['@'].config.client.secret}`).toString(\"base64\")\n\t\t)\n\n\t\t// Return Result\n\t\treturn ctr.print({\n\t\t\tsuccess: true\n\t\t})\n\t}\n} as HTTPRouteFile<Body>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAIA,4BAAyC;AACzC,MAAM,QAAQ,IAAI,sBAAAA,QAAc;AAEhC,iBAAS;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EAEN,MAAM,KAAK,KAAK;AAEf,QAAI,GAAG,EAAE,IAAI,MAAM,IAAI,IAAI,GAAG,EAAE,KAAK,EAAE;AAGvC,UAAM,MAAM;AAAA,MACX,IAAI,GAAG,EAAE,KAAK,OAAO;AAAA,MACrB,OAAO,KAAK,GAAG,IAAI,GAAG,EAAE,OAAO,OAAO,MAAM,IAAI,GAAG,EAAE,OAAO,OAAO,QAAQ,EAAE,SAAS,QAAQ;AAAA,IAC/F;AAGA,WAAO,IAAI,MAAM;AAAA,MAChB,SAAS;AAAA,IACV,CAAC;AAAA,EACF;AACD;",
  "names": ["DiscordOauth2"]
}
