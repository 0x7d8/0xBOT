{
  "version": 3,
  "sources": ["../../src/models/DatabaseObject.ts"],
  "sourcesContent": ["import config from \"@config\"\nimport pg from \"pg\"\nconst db = new pg.Pool({\n\thost: config.database.oxbot.host,\n\tdatabase: config.database.oxbot.database,\n\tuser: config.database.oxbot.username,\n\tpassword: config.database.oxbot.password,\n\tport: 5432,\n\tssl: true\n})\n\nexport type DatabaseObjectMapping<ObjectInterface> = {\n  [K in keyof ObjectInterface]: ObjectInterface[K] extends object\n    ? Record<keyof ObjectInterface[K], string>\n    : string\n}\n\nexport interface DatabaseObjectInfos<ObjectInterface> {\n  /** The Table to use */ table: string\n  /** The Mapping to use */ mapping: DatabaseObjectMapping<ObjectInterface>\n}\n\nexport type DatabaseObjectControl<ObjectInterface, SearchInterface> = ObjectInterface & {\n  /** Control of the Object */ '@': DatabaseObject<ObjectInterface, SearchInterface>\n}\n\n\nexport default class DatabaseObject<ObjectInterface, SearchInterface> {\n  public data: ObjectInterface\n  protected default: ObjectInterface\n  protected where: Partial<SearchInterface>\n  protected infos: DatabaseObjectInfos<ObjectInterface>\n\n  /** Use an Object Matching the Search */\n  async useControl(\n    /** The Search of this Object */ search: Partial<SearchInterface>\n  ): Promise<DatabaseObjectControl<ObjectInterface, SearchInterface>> {\n    let iteration = 0, whereIteration = 0\n    const whereClause = Object.keys(search).map(\n      (key) => `${key} = $${++iteration}` + (++whereIteration === Object.keys(search).length ? '' : ' and '))\n\n    this.where = search\n    const { rows }\n      = await db.query(`select * from ${this.infos.table} where ${whereClause.join('')} limit 1`, [\n        ...Object.keys(search).map((key) => search[key])\n      ])\n\n    if (rows.length > 0) this.data = this.mapColumnsToObject(rows[0])\n    else this.data = this.default\n    return { '@': this, ...this.data }\n  }\n\n  /** Save an Object */\n  async save() {\n    let iteration = 0, updateIteration = 0, whereIteration = 0\n    const updateData = this.mapObjectToColumns(this.data)\n    const updateClause = Object.keys(updateData).map(\n      (key) => `${key} = $${++iteration}` + (++updateIteration === Object.keys(updateData).length ? '' : ', '))\n    const whereClause = Object.keys(this.where).map(\n      (key) => `${key} = $${++iteration}` + (++whereIteration === Object.keys(this.where).length ? '' : ' and '))\n\n    return await db.query(`update ${this.infos.table} set ${updateClause.join('')} where ${whereClause.join('')}`, [\n      ...Object.keys(updateData).map((key) => updateData[key]),\n      ...Object.keys(this.where).map((key) => this.where[key])\n    ])\n  }\n\n  /** Update an Object Matching the Search */\n  async update(\n    /** The new Data of this Object */ data: Partial<ObjectInterface>\n  ) {\n    let iteration = 0, updateIteration = 0, whereIteration = 0\n    const updateData = this.mapObjectToColumns(data)\n    const updateClause = Object.keys(updateData).map(\n      (key) => `${key} = $${++iteration}` + (++updateIteration === Object.keys(updateData).length ? '' : ', '))\n    const whereClause = Object.keys(this.where).map(\n      (key) => `${key} = $${++iteration}` + (++whereIteration === Object.keys(this.where).length ? '' : ' and '))\n\n    return await db.query(`update ${this.infos.table} set ${updateClause.join('')} where ${whereClause.join('')}`, [\n      ...Object.keys(updateData).map((key) => updateData[key]),\n      ...Object.keys(this.where).map((key) => this.where[key])\n    ])\n  }\n\n  /** Delete an Object */\n  async delete() {\n    let iteration = 0, whereIteration = 0\n    const whereClause = Object.keys(this.where).map(\n      (key) => `${key} = $${++iteration}` + (++whereIteration === Object.keys(this.where).length ? '' : ' and '))\n\n    return await db.query(`delete from ${this.infos.table} where ${whereClause.join('')}`, [\n      ...Object.keys(this.where).map((key) => this.where[key])\n    ])\n  }\n\n\n  private mapObjectToColumns(object: Partial<ObjectInterface>): Record<string, any> {\n    const result: Record<string, any> = {}\n    Object.keys(object).forEach((key) => {\n      if (typeof this.infos.mapping[key] === 'object') {\n        Object.keys(this.infos.mapping[key]).forEach((k) => {\n          result[this.infos.mapping[key][k]] = object[key][k]\n        })\n      } else result[this.infos.mapping[key]] = object[key]\n    }); return result\n  }\n\n  private mapColumnsToObject(columns: Record<string, any>): ObjectInterface {\n    const result: any = {}\n    Object.keys(this.infos.mapping).forEach((key) => {\n      if (key in columns) result[key] = columns[key]\n      else if (typeof this.infos.mapping[key] === 'object') {\n        result[key] = {}\n        Object.keys(this.infos.mapping[key]).forEach((k) => {\n          if (k in columns) result[key][k] = columns[k]\n          else result[key][k] = columns[this.infos.mapping[key][k]]\n        })\n      } else result[key] = columns[this.infos.mapping[key]]\n    }); return result\n  }\n}"],
  "mappings": "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",
  "names": ["pg", "config"]
}
