{
  "version": 3,
  "sources": ["../../src/utils/timer.ts"],
  "sourcesContent": ["export class Timer {\n\tprivate isRunning: boolean\n\tprivate startTime: number\n\tprivate overallTime: number\n\n\tconstructor () {\n\t\tthis.isRunning = false\n\t\tthis.startTime = 0\n\t\tthis.overallTime = 0\n\t}\n\n\tprivate getTimeElapsedSinceLastStart () {\n\t\tif (!this.startTime) return 0\n\n\t\treturn Date.now() - this.startTime\n\t}\n\n\tpublic start() {\n\t\tif (this.isRunning) return console.error('Timer is already running')\n\n\t\tthis.isRunning = true\n\t\tthis.startTime = Date.now()\n\t}\n\n\tpublic stop() {\n\t\tif (!this.isRunning) return console.error('Timer is already stopped')\n\n\t\tthis.isRunning = false\n\t\tthis.overallTime = this.overallTime + this.getTimeElapsedSinceLastStart()\n\t}\n\n\tpublic reset() {\n\t\tthis.overallTime = 0\n\n\t\tif (this.isRunning) return this.startTime = Date.now()\n\n\t\tthis.startTime = 0\n\t}\n\n\tpublic getTime() {\n\t\tif (!this.startTime) return 0\n\t\tif (this.isRunning) return this.overallTime + this.getTimeElapsedSinceLastStart()\n\n\t\treturn this.overallTime\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,MAAM;AAAA,EAKlB,cAAe;AACd,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,cAAc;AAAA,EACpB;AAAA,EAEQ,+BAAgC;AACvC,QAAI,CAAC,KAAK;AAAW,aAAO;AAE5B,WAAO,KAAK,IAAI,IAAI,KAAK;AAAA,EAC1B;AAAA,EAEO,QAAQ;AACd,QAAI,KAAK;AAAW,aAAO,QAAQ,MAAM,0BAA0B;AAEnE,SAAK,YAAY;AACjB,SAAK,YAAY,KAAK,IAAI;AAAA,EAC3B;AAAA,EAEO,OAAO;AACb,QAAI,CAAC,KAAK;AAAW,aAAO,QAAQ,MAAM,0BAA0B;AAEpE,SAAK,YAAY;AACjB,SAAK,cAAc,KAAK,cAAc,KAAK,6BAA6B;AAAA,EACzE;AAAA,EAEO,QAAQ;AACd,SAAK,cAAc;AAEnB,QAAI,KAAK;AAAW,aAAO,KAAK,YAAY,KAAK,IAAI;AAErD,SAAK,YAAY;AAAA,EAClB;AAAA,EAEO,UAAU;AAChB,QAAI,CAAC,KAAK;AAAW,aAAO;AAC5B,QAAI,KAAK;AAAW,aAAO,KAAK,cAAc,KAAK,6BAA6B;AAEhF,WAAO,KAAK;AAAA,EACb;AACD;",
  "names": []
}
