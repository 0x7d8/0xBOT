{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import * as cron from \"node-cron\"\nimport { start } from \"@/bot\"\nimport { default as pg } from \"pg\"\nimport { getAllFilesFilter } from \"@/utils/getAllFiles\"\nimport { default as axios } from \"axios\"\nimport config from \"@config\"\n\nimport { HTTPContext } from \"@/interfaces/Webserver\"\nimport { Server, Version, Status } from \"rjweb-server\"\nimport * as RateLimit from \"rjweb-server-ratelimit\"\n\n// Create Client\nimport { Client, GatewayIntentBits } from \"discord.js\"\nconst client = new Client({ intents: [\n\tGatewayIntentBits.Guilds\n] }); client.login(config.client.token)\n\nimport * as apiFunctions from \"@/functions/api\"\nimport * as botFunctions from \"@/functions/bot\"\nimport * as bot from \"@/functions/bot\"\n\n// CLI Commands\nconst stdin = process.openStdin()\nstdin.addListener(\"data\", async(input) => {\n\t// Get Arguments\n\tconst args = input.toString().trim().split(' ')\n\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] RECIEVED COMMAND [${input.toString().trim().toUpperCase()}]`)\n\n\t// ADDBAL\n\tif (args[0].toUpperCase() === 'ADDBAL') {\n\t\tif (typeof args[1] !== 'undefined' && typeof args[2] !== 'undefined') {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] ADDED ${args[2]}\u20AC TO ${args[1]}`)\n\t\t\tbot.money.add(false, args[1].toString(), Number(args[2]))\n\t\t} else {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] USAGE: ADDBAL [USERID] [AMOUNT]`)\n\t\t}\n\t}\n\n\t// REMBAL\n\tif (args[0].toUpperCase() === 'REMBAL') {\n\t\tif (typeof args[1] !== 'undefined' && typeof args[2] !== 'undefined') {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] REMOVED ${args[2]}\u20AC FROM ${args[1]}`)\n\t\t\tbot.money.rem(false, args[1].toString(), Number(args[2]))\n\t\t} else {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] USAGE: REMBAL [USERID] [AMOUNT]`)\n\t\t}\n\t}\n\n\t// SETBAL\n\tif (args[0].toUpperCase() === 'SETBAL') {\n\t\tif (typeof args[1] !== 'undefined' && typeof args[2] !== 'undefined') {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] SET BALANCE OF ${args[1]} TO ${args[2]}\u20AC`)\n\t\t\tbot.money.set(false, args[1].toString(), Number(args[2]))\n\t\t} else {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] USAGE: SETBAL [USERID] [AMOUNT]`)\n\t\t}\n\t}\n\n\t// EVAL\n\tif (args[0].toUpperCase() === 'EVAL') {\n\t\tif (typeof args[1] !== 'undefined') {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] RESULT OF EVAL:`)\n\t\t\targs.shift()\n\n\t\t\ttry {\n\t\t\t\tconsole.log(await eval(args.join(' ')))\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log(e)\n\t\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] EVAL RETURNED AN ERROR`)\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] USAGE: EVAL [COMMAND]`)\n\t\t}\n\t}\n})\n\n{(async() => {\n\t// Show Logo\n\tconsole.log(' ')\n\tconsole.log('  /$$$$$$            /$$$$$$$   /$$$$$$  /$$$$$$$$')\n\tconsole.log(' /$$$_  $$          | $$__  $$ /$$__  $$|__  $$__/')\n\tconsole.log('| $$$$\\\\ $$ /$$   /$$| $$  \\\\ $$| $$  \\\\ $$   | $$   ')\n\tconsole.log('| $$ $$ $$|  $$ /$$/| $$$$$$$ | $$  | $$   | $$   ')\n\tconsole.log('| $$\\\\ $$$$ \\\\  $$$$/ | $$__  $$| $$  | $$   | $$   ')\n\tconsole.log('| $$ \\\\ $$$  |$$  $$ | $$  \\\\ $$| $$  | $$   | $$   ')\n\tconsole.log('|  $$$$$$/ /$$/\\\\  $$| $$$$$$$/|  $$$$$$/   | $$   ')\n\tconsole.log(' \\\\______/ |__/  \\\\__/|_______/  \\\\______/    |__/   ')\n\tconsole.log(' ')\n\tconsole.log('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$')\n\tconsole.log(' ')\n\n\t// Database Migrations\n\tconst migrator = async(conn: pg.Pool) => {\n\t\tconst migrations = getAllFilesFilter('./migrations', '.js')\n\t\tfor (const file of migrations) {\n\t\t\tconst migration = (await import(file)).default.default\n\n\t\t\tconst status = await migration.migrate(conn)\n\t\t\tif (status) console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] MIGRATED ${migration.data.name}`)\n\t\t\telse console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] DIDNT MIGRATE ${migration.data.name}`)\n\t\t}\n\t}; const db = new pg.Pool({\n\t\thost: config.database.oxbot.host,\n\t\tdatabase: config.database.oxbot.database,\n\t\tuser: config.database.oxbot.username,\n\t\tpassword: config.database.oxbot.password,\n\t\tssl: true,\n\t\tport: 5432\n\t}); await migrator(db)\n\n\t/// Dashboard\n\t// Website\n\tconst webController = new Server({\n\t\tbind: '0.0.0.0',\n\t\tport: config.web.ports.dashboard,\n\t\tcompression: 'gzip',\n\t\tbody: {\n\t\t\tenabled: false\n\t\t}\n\t})\n\n\twebController.path('/', (path) => path\n\t\t.static('../dashboard/dist', {\n\t\t\thideHTML: true,\n\t\t\taddTypes: true\n\t\t})\n\t)\n\n\twebController.event('http404', (ctr: HTTPContext) => {\n\t\treturn ctr.printFile('../dashboard/dist/index.html')\n\t}).event('httpRequest', (ctr: HTTPContext) => {\n\t\tif (!ctr.headers.get('user-agent')?.startsWith('Uptime-Kuma')) console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [WEB] [${ctr.url.method.toUpperCase()}] ${ctr.url.path}`)\n\t})\n\n\tif (config.web.dashboard) await webController.start().then((res) => {\n\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [STA] $$$$$ STARTED DASHBOARD ON PORT ${res.port}, VERSION ${Version}`)\n\t})\n\n\t// API\n\tconst apiController = new Server({\n\t\tbind: '0.0.0.0',\n\t\tcors: true,\n\t\tproxy: true,\n\t\tport: config.web.ports.api,\n\t\tcompression: 'gzip',\n\t\tdashboard: {\n\t\t\tenabled: true,\n\t\t\tpath: '/dashboard',\n\t\t\tpassword: 'IlikeBallz'\n\t\t}, body: {\n\t\t\tenabled: true,\n\t\t\tmaxSize: 1,\n\t\t\tmessage: { success: false, message: 'HTTP BODY TOO BIG' }\n\t\t}\n\t})\n\n\tapiController.defaultHeaders()\n\t\t.add('copyright', `${new Date().getFullYear()} 0x4096`)\n\n\tapiController.middleware(RateLimit.init({\n\t\thttp: {\n\t\t\trules: [\n\t\t\t\t{\n\t\t\t\t\tpath: '/auth/refresh',\n\t\t\t\t\ttimeWindow: (1000 * 60 * 60 * 60 * 6),\n\t\t\t\t\tmaxHits: 5\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: '/guild/check',\n\t\t\t\t\ttimeWindow: (1000 * 60 * 60 * 60 * 6),\n\t\t\t\t\tmaxHits: 25\n\t\t\t\t}\n\t\t\t], message: { success: false, message: 'RATE LIMIT HIT' }\n\t\t}\n\t}))\n\n\tapiController.path('/', (path) => path\n\t\t.validate(async(ctr: HTTPContext) => {\n\t\t\t// Check Permissions\n\t\t\tif (!ctr.headers.has('authtoken')) return ctr.status(Status.BAD_REQUEST).print({ success: false, message: 'NO AUTH TOKEN' })\n\t\t\tif (!await ctr['@'].api.checkAuth(ctr.headers.get('authtoken'), ctr.queries.get('id'))) return ctr.status(Status.UNAUTHORIZED).print({ success: false, message: 'PERMISSION DENIED' })\n\t\t})\n\t\t.loadCJS('routes/authorized/guild')\n\t)\n\n\tapiController.path('/', (path) => path\n\t\t.validate(async(ctr: HTTPContext) => {\n\t\t\t// Check Token\n\t\t\tif (!ctr.headers.has('authtoken')) return ctr.status(Status.BAD_REQUEST).print({ success: false, message: 'NO AUTH TOKEN' })\n\t\t\tctr.setCustom('user', await ctr['@'].api.users.get(ctr.headers.get('authtoken')))\n\t\t\tif (!ctr[\"@\"].user.id) return ctr.status(Status.UNAUTHORIZED).print({ success: false, message: 'TOKEN NOT FOUND' })\n\t\t})\n\t\t.loadCJS('routes/authorized/user')\n\t)\n\n\tapiController.path('/', (path) => path\n\t\t.loadCJS('routes/normal')\n\t)\n\n\tapiController.event('http404', async(ctr: HTTPContext) => {\n\t\treturn ctr.status(Status.NOT_FOUND).print({\n\t\t\tsuccess: false,\n\t\t\tmessage: 'ROUTE NOT FOUND'\n\t\t})\n\t}).event('httpRequest', async(ctr: HTTPContext) => {\n\t\tctr.setCustom('api', apiFunctions)\n\t\tctr.setCustom('bot', botFunctions)\n\t\tctr.setCustom('config', config)\n\t\tctr.setCustom('client', client)\n\t\tctr.setCustom('db', db)\n\n\t\tif (!ctr.headers.get('user-agent')?.startsWith('Uptime-Kuma')) console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [API] [${ctr.url.method}] ${ctr.url.path}`)\n\t}).event('runtimeError', async(ctr: HTTPContext, error) => {\n\t\tconsole.error(error.stack)\n\t\treturn ctr.status(Status.INTERNAL_SERVER_ERROR).print({\n\t\t\tsuccess: false,\n\t\t\tmessage: 'SERVER ERROR'\n\t\t})\n\t})\n\n\tif (config.web.api) await apiController.start().then((res) => {\n\t\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [STA] $$$$$ STARTED API ON PORT ${res.port}, VERSION ${Version}`)\n\t})\n\n\t// Bot Stats\n\tif (config.web.stats) {\n\t\tcron.schedule('0 * * * *', async() => {\n\t\t\t{ // TOP.GG\n\t\t\t\tconst req = await axios({\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: `https://top.gg/api/bots/${config.client.id}/stats`,\n\t\t\t\t\tvalidateStatus: () => true,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: config.web.keys.topgg.apikey\n\t\t\t\t\t}, data: {\n\t\t\t\t\t\tserver_count: client.guilds.cache.size\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (req.status !== 200) console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] [${req.status}] FAILED TO POST TOPGG STATS`)\n\t\t\t\telse console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] [${req.status}] POSTED TOPGG STATS`)\n\t\t\t}\n\n\t\t\t{ // DBL.COM\n\t\t\t\tconst req = await axios({\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\turl: `https://discordbotlist.com/api/v1/bots/${config.client.id}/stats`,\n\t\t\t\t\tvalidateStatus: () => true,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: config.web.keys.dbl.apikey\n\t\t\t\t\t}, data: {\n\t\t\t\t\t\tguilds: client.guilds.cache.size\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (req.status !== 200) console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] [${req.status}] FAILED TO POST DBL STATS`)\n\t\t\t\telse console.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [INF] [${req.status}] POSTED DBL STATS`)\n\t\t\t}\n\t\t})\n\t}\n\n\t// Start Bot\n\tconsole.log(' ')\n\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [STA] $$$$$ LOADING 0xBOT ${config.version}`)\n\tconsole.log(' ')\n\tconsole.log(`[0xBOT] [i] [${new Date().toLocaleTimeString('en-US', { hour12: false })}] [STA] $$$$$ LOADING COMMANDS AND EVENTS`)\n\tconsole.log(' ')\n\n\tstart(await db.connect())\n}) ()}"],
  "mappings": "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",
  "names": ["config", "pg", "axios"]
}
