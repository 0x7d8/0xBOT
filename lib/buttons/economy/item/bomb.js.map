{
  "version": 3,
  "sources": ["../../../../src/buttons/economy/item/bomb.ts"],
  "sourcesContent": ["import { EmbedBuilder, ButtonStyle } from \"discord.js\"\n\nimport { ChannelType } from \"discord.js\"\nimport ButtonInteraction from \"@/interfaces/ButtonInteraction\"\nexport default {\n\tdata: {\n\t\tname: 'item-bomb'\n\t},\n\n\tasync execute(ctx: ButtonInteraction, solution: string, choice: string, solbutton: string, button: string, itemid: string, reciever: string) {\n\t\t// Check if Channel is wrong type\n\t\tif (ctx.interaction.channel.type === ChannelType.GuildStageVoice) return\n\n\t\t// Check if User is Authorized\n\t\tif (ctx.interaction.user.id !== reciever) {\n\t\t\t// Create Embed\n\t\t\tlet message = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t.setTitle('<:EXCLAMATION:1024407166460891166> \u00BB ERROR')\n  \t\t\t.setDescription(`\u00BB This choice is up to <@${reciever}>!`)\n\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version })\n\n\t\t\tif (ctx.metadata.language === 'de') {\n\t\t\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t\t.setTitle('<:EXCLAMATION:1024407166460891166> \u00BB FEHLER')\n  \t\t\t\t.setDescription(`\u00BB Diese Frage ist f\u00FCr <@${reciever}>!`)\n\t\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version })\n\t\t\t}\n\t\t\t\n\t\t\t// Send Message\n\t\t\tctx.log(false, `[BTN] ITEMUSE : NOTSENDER`)\n\t\t\treturn ctx.interaction.reply({ embeds: [message], ephemeral: true })\n\t\t}\n\n\t\t// Answer Timeout Function\n\t\tctx.bot.bomb.delete('TIMEOUT-' + reciever + '-' + ctx.interaction.guild.id)\n\n\t\t// Edit Buttons\n\t\tctx.components.rows[0].components[0].setDisabled(true)\n\t\tctx.components.rows[0].components[1].setDisabled(true)\n\t\tctx.components.rows[0].components[2].setDisabled(true)\n\t\tctx.components.rows[0].components[3].setDisabled(true)\n\t\tctx.components.rows[0].components[Number(button)-1].setStyle(4)\n\t\tctx.components.rows[0].components[Number(solbutton)-1].setStyle(3)\n\n\t\t// Create Embed\n\t\tlet message: EmbedBuilder\n\t\tif (solution === choice) {\n\t\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t.setTitle('<:BOXOPEN:1024395281460101213> \u00BB USE ITEM')\n  \t\t\t.setDescription(`\u00BB <@${reciever}> has diffused the Bomb! YAY`)\n\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version })\n\n\t\t\tif (ctx.metadata.language === 'de') {\n\t\t\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t\t.setTitle('<:BOXOPEN:1024395281460101213> \u00BB GEGENSTAND NUTZEN')\n  \t\t\t\t.setDescription(`\u00BB <@${reciever}> hat die Bombe entsch\u00E4rft! YAY`)\n\t\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version })\n\t\t\t}\n\t\t} else {\n\t\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t.setTitle('<:BOXOPEN:1024395281460101213> \u00BB USE ITEM')\n  \t\t\t.setDescription(`\u00BB <@${reciever}> has failed to diffuse the Bomb! OHNO`)\n\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version })\n\n\t\t\tif (ctx.metadata.language === 'de') {\n\t\t\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t\t.setTitle('<:BOXOPEN:1024395281460101213> \u00BB GEGENSTAND NUTZEN')\n  \t\t\t\t.setDescription(`\u00BB <@${reciever}> hat es nicht geschafft, die Bombe zu entsch\u00E4rfen! OH`)\n\t\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version })\n\t\t\t}\n\t\t}\n\n\t\t// Punish User if Lost\n\t\tconst messages = ctx.bot.bomb.get('MESSAGES-' + reciever + '-' + ctx.interaction.guild.id)\n\t\tctx.bot.bomb.delete('MESSAGES-' + reciever + '-' + ctx.interaction.guild.id)\n\t\tif (solution !== choice) {\n\t\t\tif (itemid === 'nbomb') {\n\t\t\t\tconst member = await ctx.interaction.guild.members.fetch(ctx.interaction.user.id)\n\t\t\t\tmember.timeout(15 * 1000, `BOMB TIMEOUT FROM ${ctx.interaction.user.id}`).catch(() => {})\n\t\t\t}; if (itemid === 'mbomb') {\n\t\t\t\tconst member = await ctx.interaction.guild.members.fetch(ctx.interaction.user.id)\n\t\t\t\tmember.timeout(30 * 1000, `BOMB TIMEOUT FROM ${ctx.interaction.user.id}`).catch(() => {})\n\t\t\t}; if (itemid === 'hbomb') {\n\t\t\t\tconst member = await ctx.interaction.guild.members.fetch(ctx.interaction.user.id)\n\t\t\t\tmember.timeout(45 * 1000, `BOMB TIMEOUT FROM ${ctx.interaction.user.id}`).catch(() => {})\n\t\t\t}; if (itemid === 'cbomb') {\n\t\t\t\tconst filtered = []\n\t\t\t\tlet i = 0\n\n\t\t\t\t{(await messages).filter((m: any) => {\n\t\t\t\t\tif (m.author.id === ctx.interaction.user.id && 1 > i) {\n\t\t\t\t\t\tfiltered.push(m)\n\t\t\t\t\t\ti++\n\t\t\t\t\t}\n\t\t\t\t})}\n\n\t\t\t\tawait ctx.interaction.channel.bulkDelete(filtered, true)\n\t\t\t}\n\t\t}\n\n\t\t// Send Message\n\t\tctx.log(false, `[BTN] ITEMUSE : BOMB : ${choice} : ${solution}`)\n\t\treturn ctx.interaction.update({ content: '', embeds: [message], components: (ctx.components.getAPI()) })\n\t}\n}"],
  "mappings": "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",
  "names": ["import_discord", "message"]
}
