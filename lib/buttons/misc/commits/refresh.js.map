{
  "version": 3,
  "sources": ["../../../../src/buttons/misc/commits/refresh.ts"],
  "sourcesContent": ["import { EmbedBuilder } from \"discord.js\"\nimport simpleGit from \"simple-git\"\n\nconst git = simpleGit()\n\nimport ButtonInteraction from \"@/interfaces/ButtonInteraction\"\nexport default {\n\tdata: {\n\t\tname: 'commits-refresh'\n\t},\n\n\tasync execute(ctx: ButtonInteraction) {\n\t\t// Get all Commits\n\t\tlet embedDesc = ''\n\t\tconst gitInfos = await git.log({\n\t\t\t'--pretty': 'format:{\"hash\":\"%h\",\"subject\":\"%s\",\"author\":\"%aN\",\"authorDate\":\"%ad\"}'\n\t\t}); const commits = gitInfos.all as any[]\n\n\t\t// Sort commits by authorDate\n\t\tcommits.sort((a: { authorDate: string }, b: { authorDate: string }) => {\n\t\t\tconst dateA = new Date(a.authorDate).getTime()\n\t\t\tconst dateB = new Date(b.authorDate).getTime()\n\t\t\treturn dateA - dateB\n\t\t})\n\n\t\tlet index = 0\n\t\tcommits.reverse().forEach((commit) => {\n\t\t\tcommits[index++] = { ...commit, count: index }\n\t\t})\n\n\t\t// Get the start and end indices for the current page\n\t\tconst startIndex = (Math.ceil(commits.length / 10) - 1) * 10\n\t\tconst endIndex = Math.min(startIndex + 10, commits.length)\n\n\t\t// Iterate over the elements on the current page\n\t\tfor (const element of commits.slice(startIndex, endIndex).reverse()) {\n\t\t\tconst count = element.count\n\t\t\tlet formattedCount = count.toString()\n\t\t\tif (count < 100) formattedCount = '0' + count\n\t\t\tif (count < 10) formattedCount = '00' + count\n\t\t\tembedDesc += `**\\`${formattedCount}.\\`** \u00BB ${element.message}\\n`\n\t\t}\n\n\t\t// Edit Buttons\n\t\tctx.components.rows[0].components[0].setCustomId(`COMMITS-REFRESH-${commits.length}-${Math.ceil(commits.length / 10)}`)\n\t\tctx.components.rows[0].components[1].setCustomId(`COMMITS-BACK-${commits.length}-${Math.ceil(commits.length / 10)}`)\n\t\tctx.components.rows[0].components[2].setCustomId(`COMMITS-NEXT-${commits.length}-${Math.ceil(commits.length / 10)}`)\n\t\tctx.components.rows[0].components[1].setDisabled(false)\n\t\tctx.components.rows[0].components[2].setDisabled(true)\n\n\t\t// Create Embed\n\t\tlet message = new EmbedBuilder().setColor(0x37009B)\n\t\t\t.setTitle('<:GLOBE:1024403680503529583> \u00BB GIT COMMITS')\n\t\t\t.setDescription(embedDesc)\n\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version + ' \u00BB PAGE ' + (Math.ceil(commits.length / 10)) })\n\n\t\tif (ctx.metadata.language === 'de') {\n\t\t\tmessage = new EmbedBuilder().setColor(0x37009B)\n\t\t\t\t.setTitle('<:GLOBE:1024403680503529583> \u00BB GIT COMMITS')\n\t\t\t\t.setDescription(embedDesc)\n\t\t\t\t.setFooter({ text: '\u00BB ' + ctx.metadata.vote.text + ' \u00BB ' + ctx.client.config.version + ' \u00BB SEITE ' + (Math.ceil(commits.length / 10)) })\n\t\t}\n\n\t\t// Send Message\n\t\tctx.log(false, `[BTN] COMMITS : REFRESH : ${commits.length} : ${Math.ceil(commits.length / 10)}`)\n\t\treturn ctx.interaction.update({ embeds: [message], components: (ctx.components.getAPI()) })\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA6B;AAC7B,wBAAsB;AAEtB,MAAM,UAAM,kBAAAA,SAAU;AAGtB,IAAO,kBAAQ;AAAA,EACd,MAAM;AAAA,IACL,MAAM;AAAA,EACP;AAAA,EAEA,MAAM,QAAQ,KAAwB;AAErC,QAAI,YAAY;AAChB,UAAM,WAAW,MAAM,IAAI,IAAI;AAAA,MAC9B,YAAY;AAAA,IACb,CAAC;AAAG,UAAM,UAAU,SAAS;AAG7B,YAAQ,KAAK,CAAC,GAA2B,MAA8B;AACtE,YAAM,QAAQ,IAAI,KAAK,EAAE,UAAU,EAAE,QAAQ;AAC7C,YAAM,QAAQ,IAAI,KAAK,EAAE,UAAU,EAAE,QAAQ;AAC7C,aAAO,QAAQ;AAAA,IAChB,CAAC;AAED,QAAI,QAAQ;AACZ,YAAQ,QAAQ,EAAE,QAAQ,CAAC,WAAW;AACrC,cAAQ,OAAO,IAAI,EAAE,GAAG,QAAQ,OAAO,MAAM;AAAA,IAC9C,CAAC;AAGD,UAAM,cAAc,KAAK,KAAK,QAAQ,SAAS,EAAE,IAAI,KAAK;AAC1D,UAAM,WAAW,KAAK,IAAI,aAAa,IAAI,QAAQ,MAAM;AAGzD,eAAW,WAAW,QAAQ,MAAM,YAAY,QAAQ,EAAE,QAAQ,GAAG;AACpE,YAAM,QAAQ,QAAQ;AACtB,UAAI,iBAAiB,MAAM,SAAS;AACpC,UAAI,QAAQ;AAAK,yBAAiB,MAAM;AACxC,UAAI,QAAQ;AAAI,yBAAiB,OAAO;AACxC,mBAAa,OAAO,4BAAyB,QAAQ;AAAA;AAAA,IACtD;AAGA,QAAI,WAAW,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,mBAAmB,QAAQ,UAAU,KAAK,KAAK,QAAQ,SAAS,EAAE,GAAG;AACtH,QAAI,WAAW,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,gBAAgB,QAAQ,UAAU,KAAK,KAAK,QAAQ,SAAS,EAAE,GAAG;AACnH,QAAI,WAAW,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,gBAAgB,QAAQ,UAAU,KAAK,KAAK,QAAQ,SAAS,EAAE,GAAG;AACnH,QAAI,WAAW,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,KAAK;AACtD,QAAI,WAAW,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,IAAI;AAGrD,QAAI,UAAU,IAAI,4BAAa,EAAE,SAAS,OAAQ,EAChD,SAAS,+CAA4C,EACrD,eAAe,SAAS,EACxB,UAAU,EAAE,MAAM,UAAO,IAAI,SAAS,KAAK,OAAO,WAAQ,IAAI,OAAO,OAAO,UAAU,gBAAc,KAAK,KAAK,QAAQ,SAAS,EAAE,EAAG,CAAC;AAEvI,QAAI,IAAI,SAAS,aAAa,MAAM;AACnC,gBAAU,IAAI,4BAAa,EAAE,SAAS,OAAQ,EAC5C,SAAS,+CAA4C,EACrD,eAAe,SAAS,EACxB,UAAU,EAAE,MAAM,UAAO,IAAI,SAAS,KAAK,OAAO,WAAQ,IAAI,OAAO,OAAO,UAAU,iBAAe,KAAK,KAAK,QAAQ,SAAS,EAAE,EAAG,CAAC;AAAA,IACzI;AAGA,QAAI,IAAI,OAAO,6BAA6B,QAAQ,YAAY,KAAK,KAAK,QAAQ,SAAS,EAAE,GAAG;AAChG,WAAO,IAAI,YAAY,OAAO,EAAE,QAAQ,CAAC,OAAO,GAAG,YAAa,IAAI,WAAW,OAAO,EAAG,CAAC;AAAA,EAC3F;AACD;",
  "names": ["simpleGit"]
}
